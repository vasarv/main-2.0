import sys

##############################
sys.dont_write_bytecode = True
##############################
import discord
from discord.ext import commands
from discord.utils import get
import config
from asyncio import sleep
import sqlite3 as sql
from loguru import logger


class commands(commands.Cog):
    def __init__(self, client):
        self.client = client
        self.logger = logger
        self.prefix = config.prefix
        self.log = config.log_channel

    @commands.command()
    async def ping(self, ctx):
        """–ü–∏–Ω–≥–∞–Ω—É—Ç—å –±–æ—Ç–∞"""

        delay: str = str(self.client.latency)

        await ctx.send(
            f":green_circle: - –Ø –≤ —Å–µ—Ç–∏. ||–ü–∏–Ω–≥: **{delay[2:4]}{"ms" if delay[0] == "0" else "s"}.**||",
            delete_after=3,
        )

        await ctx.message.delete()

    @commands.command()
    @commands.has_permissions(administrator = True)
    async def clear(self, ctx, amount=10**1000):
        """–û—á–∏—Å—Ç–∏—Ç—å —á–∞—Ç"""

        await self.client.get_channel(config.log_channel).send(
            f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {ctx.author.name} —á–∏—Å—Ç–∏—Ç —á–∞—Ç {ctx.channel.name} –Ω–∞ {amount if not amount == 10**1000 else '‚àû'} —Å–æ–æ–±—â–µ–Ω–∏–π"
        )

        await ctx.message.delete()
        await ctx.channel.purge(limit=amount)


    @commands.command()
    @commands.has_permissions(administrator = True)
    async def stats(self, ctx):
        """–ü–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ—Ç —É—á–∞—Å—Ç–Ω–∏–∫–∞—Ö —Å–µ—Ä–≤–µ—Ä–∞"""

        activites: list[list] = [[], [], []] #bots online, users online, users offline
        
        for member in ctx.guild.members:
            if member.bot == True:
                activites[0].append(member.name)
            elif not (member.status is discord.Status.offline) and member.bot == False:
                activites[1].append(member.name)
            else:
                activites[2].append(member.name)

        embed = discord.Embed(color=0x000)
        embed.add_field(name="–í—Å–µ–≥–æ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤:", value=ctx.guild.member_count)
        embed.add_field(
            name=":green_circle: - –£—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –æ–Ω–ª–∞–π–Ω:",
            value=f"{len(activites[1])}",
            inline=True,
        )

        embed.add_field(
            name=":red_circle: - –£—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –æ—Ñ—Ñ–ª–∞–π–Ω:",
            value=f"{len(activites[2])}",
            inline=True,
        )

        embed.add_field(
            name=":robot: - –ë–æ—Ç–æ–≤ –æ–Ω–ª–∞–π–Ω:",
            value=f"{len(activites[0])}",
            inline=True,
        )

        await ctx.send(embed=embed, delete_after=5)
        await ctx.message.delete()


    @commands.command()
    @commands.has_permissions(administrator=True)
    async def emojis(self, ctx):
        """–ü–æ–ª—É—á–∏—Ç—å id –≤—Å–µ—Ö emoji —Å–µ—Ä–≤–µ—Ä–∞"""

        guild = discord.utils.find(lambda g : g.id == ctx.guild.id, self.client.guilds)
        emoji_ids: list = [f"[{self.client.get_emoji(rect.id)}] - {rect.id}" for rect in guild.emojis]

        await ctx.send("\n".join(emoji_ids), delete_after=15)
        await ctx.message.delete()


    @commands.command()
    @commands.has_permissions(administrator=True)
    async def userinfo(
        self, ctx, member: discord.Member = None, guild: discord.Guild = None
    ):
        """–ü–æ–ª—É—á–∏—Ç—å —Å–≤–æ–¥–∫—É –æ —é–∑–µ—Ä–µ"""

        user = member if not (member == None) else ctx.message.author
        status = user.status
        bot = user.bot
        if status == discord.Status.online:
            status = "üü¢ - –í —Å–µ—Ç–∏"
        elif status == discord.Status.offline:
            status = "‚ö™ - –ù–µ –≤ —Å–µ—Ç–∏"
        elif status == discord.Status.idle:
            status = "üîµ - –ù–µ –∞–∫—Ç–∏–≤–µ–Ω"
        elif status == discord.Status.dnd:
            status = "üåô - –ù–µ –±–µ—Å–ø–æ–∫–æ–∏—Ç—å"

        emb = discord.Embed(
            title=f"{user.name} | –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ {'–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏' if bot else '–∞–∫–∫–∞—É–Ω—Ç–µ'}:", color=user.color
        )
        emb.add_field(name="–ò–º—è:", value=user.display_name, inline=False)
        emb.add_field(name="–ê–π–¥–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:", value=user.id, inline=False)
        emb.add_field(name="–¢–∏–ø –∞–∫–∫–∞—É–Ω—Ç–∞:", value=f"{'–ë–æ—Ç' if bot else '–ß–µ–ª–æ–≤–µ–∫'}", inline=False)
        emb.add_field(name="–ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å:", value=status, inline=False)
        emb.add_field(
            name="–ò–≥—Ä–æ–≤–æ–π —Å—Ç–∞—Ç—É—Å:",
            value=user.activity,
            inline=False,
        )
        emb.add_field(
            name="–í—ã—Å—à–∞—è —Ä–æ–ª—å –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ:",
            value=f"{user.top_role.mention}",
            inline=False,
        )
        emb.add_field(
            name="–ê–∫–∫–∞—É–Ω—Ç –±—ã–ª —Å–æ–∑–¥–∞–Ω:",
            value=user.created_at.strftime(
                "%a, %#d %B %Y, %I:%M %p UTC"
            ),
            inline=False,
        )
        emb.set_thumbnail(url=user.avatar)

        await ctx.send(embed=emb, delete_after = 30)
        await self.log.send(
            f"–Æ–∑–µ—Ä: [{ctx.author}] –ø–æ–ª—É—á–∏–ª –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ: [{user.name}]"
        )

        await ctx.message.delete()

async def setup(client):
    await client.add_cog(commands(client))
    
